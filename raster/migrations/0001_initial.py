# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2018-02-02 16:17
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DalleFine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_valid', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='DatePrev',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_prev', models.IntegerField(default=1517526000)),
                ('commentaire', models.CharField(default=None, max_length=10000, null=True)),
                ('previsionniste', models.CharField(default=None, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DepassementReg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.IntegerField(default=None, null=True)),
                ('lib', models.CharField(default='00000', max_length=200)),
                ('pop_exp_info', models.FloatField(default=0)),
                ('surf_exp_info', models.FloatField(default=0)),
                ('pop_exp_perc_info', models.FloatField(default=0)),
                ('surf_exp_perc_info', models.FloatField(default=0)),
                ('pop_exp_alerte', models.FloatField(default=0)),
                ('surf_exp_alerte', models.FloatField(default=0)),
                ('pop_exp_perc_alerte', models.FloatField(default=0)),
                ('surf_exp_perc_alerte', models.FloatField(default=0)),
                ('depassement_pop_info', models.BooleanField(default=False)),
                ('depassement_surf_info', models.BooleanField(default=False)),
                ('depassement_pop_alerte', models.BooleanField(default=False)),
                ('depassement_surf_alerte', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DomaineFine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(default='', max_length=100)),
                ('libCourt', models.CharField(default='', max_length=100)),
                ('libLong', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Echeance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delta', models.IntegerField(null=True)),
                ('libChar', models.CharField(default='', max_length=10)),
                ('libInt', models.CharField(default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delta', models.IntegerField()),
                ('mn', models.IntegerField(default=None, null=True)),
                ('mx', models.IntegerField(default=None, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(srid=3857)),
                ('ssup', models.IntegerField(default=None, null=True)),
                ('smin', models.IntegerField(default=None, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='IndiceCom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indice', models.FloatField()),
                ('code_insee', models.CharField(default='00000', max_length=20)),
                ('lib', models.CharField(default='00000', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Polluant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(default=None, max_length=10, null=True)),
                ('lib', models.CharField(default=None, max_length=100, null=True)),
                ('val', models.IntegerField(default=None, null=True)),
                ('vls', models.FloatField(default=None, null=True)),
                ('ale', models.FloatField(default=None, null=True)),
                ('colormap', models.CharField(default=None, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prev',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_prev', models.IntegerField(default=1517526000)),
                ('pol', models.CharField(max_length=10, null=True)),
                ('ech', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daterun', models.IntegerField(default=0)),
                ('commentaire', models.CharField(default='', max_length=10000)),
                ('statut', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TypeSourceRaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intrun', models.IntegerField(default=999)),
                ('pol', models.CharField(max_length=10)),
                ('ech', models.IntegerField()),
                ('type', models.CharField(max_length=10)),
                ('is_default_source', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_zone', models.IntegerField(default=0)),
                ('pop', models.FloatField(default=0)),
                ('surf', models.FloatField(default=0)),
                ('lib', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='source',
            name='tsr',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='raster.TypeSourceRaster'),
        ),
        migrations.AddField(
            model_name='prev',
            name='src',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='raster.Source'),
        ),
        migrations.AddField(
            model_name='indicecom',
            name='prev',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='raster.Prev'),
        ),
        migrations.AddField(
            model_name='expertise',
            name='target',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='raster.Source'),
        ),
        migrations.AddField(
            model_name='expertise',
            name='user',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='depassementreg',
            name='prev',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='raster.Prev'),
        ),
        migrations.AddField(
            model_name='dallefine',
            name='date_prev',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='raster.DatePrev'),
        ),
        migrations.AddField(
            model_name='dallefine',
            name='ech',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='raster.Echeance'),
        ),
        migrations.AddField(
            model_name='dallefine',
            name='nom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='raster.DomaineFine'),
        ),
        migrations.AddField(
            model_name='dallefine',
            name='poll',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='raster.Polluant'),
        ),
    ]
